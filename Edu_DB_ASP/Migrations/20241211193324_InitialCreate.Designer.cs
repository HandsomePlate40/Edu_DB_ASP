// <auto-generated />
using System;
using Edu_DB_ASP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Edu_DB_ASP.Migrations
{
    [DbContext(typeof(EduDbContext))]
    [Migration("20241211193324_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Adapt", b =>
                {
                    b.Property<int>("PathId")
                        .HasColumnType("int")
                        .HasColumnName("PathID");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorID");

                    b.HasKey("PathId", "InstructorId")
                        .HasName("PK__Adapt__64B7CC8EF3FCDF0D");

                    b.HasIndex("InstructorId");

                    b.ToTable("Adapt", (string)null);
                });

            modelBuilder.Entity("Award", b =>
                {
                    b.Property<int>("AchievementId")
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("BadgeID");

                    b.HasKey("AchievementId", "BadgeId")
                        .HasName("PK__Awards__F6F2B2D7A26A5BB5");

                    b.HasIndex("BadgeId");

                    b.ToTable("Awards", (string)null);
                });

            modelBuilder.Entity("Earn", b =>
                {
                    b.Property<int>("AchievementId")
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.HasKey("AchievementId", "LearnerId")
                        .HasName("PK__Earns__91198F2FF40D9D23");

                    b.HasIndex("LearnerId");

                    b.ToTable("Earns", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Achievement", b =>
                {
                    b.Property<int>("AchievementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AchievementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AchievementId"));

                    b.Property<string>("AchievementDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AchievementType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("BadgeID");

                    b.Property<DateOnly?>("DateEarned")
                        .HasColumnType("date");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.HasKey("AchievementId")
                        .HasName("PK__Achievem__276330E0200B5C44");

                    b.HasIndex("BadgeId");

                    b.HasIndex("LearnerId");

                    b.ToTable("Achievement", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.ActivityInstruction", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<string>("Instruction")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ActivityId", "Instruction")
                        .HasName("PK__Activity__3B19130FFFF1295E");

                    b.ToTable("ActivityInstructions");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Assessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentID");

                    b.Property<string>("AssessmentDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("GradingCriteria")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("MaxScore")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.Property<int?>("PassingMarks")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("TotalMarks")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weightage")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("AssessmentId")
                        .HasName("PK__Assessme__3D2BF83E5A3CB530");

                    b.HasIndex("ModuleId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Badge", b =>
                {
                    b.Property<int>("BadgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BadgeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BadgeId"));

                    b.Property<string>("BadgeDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BadgeTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CriteriaToUnlock")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("PointsValue")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("BadgeId")
                        .HasName("PK__Badges__1918237CBBA0B7BA");

                    b.ToTable("Badges");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.CollaborativeQuest", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("QuestID");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int")
                        .HasColumnName("Max_Participants");

                    b.HasKey("QuestId")
                        .HasName("PK__Collabor__B6619ACBF03D3510");

                    b.ToTable("Collaborative_Quests", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.ContentLibrary", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentId"));

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContentUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ContentURL");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Keywords")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LearningObjectives")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ContentId")
                        .HasName("PK__ContentL__2907A87EC282FE42");

                    b.HasIndex("CourseId");

                    b.ToTable("ContentLibrary", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("CourseDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("CreditPoints")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LearningObjectives")
                        .HasColumnType("text");

                    b.Property<string>("Prerequisites")
                        .HasMaxLength(212)
                        .IsUnicode(false)
                        .HasColumnType("varchar(212)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CourseId")
                        .HasName("PK__Courses__C92D7187B5609625");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.CourseEnrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateOnly?>("CompletionDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EnrollmentDate")
                        .HasColumnType("date");

                    b.Property<string>("EnrollmentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EnrollmentId", "LearnerId", "CourseId")
                        .HasName("PK__CourseEn__4FDBE545C4B4E420");

                    b.HasIndex("CourseId");

                    b.HasIndex("LearnerId");

                    b.ToTable("CourseEnrollment", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.DiscussionForum", b =>
                {
                    b.Property<int>("ForumId")
                        .HasColumnType("int")
                        .HasColumnName("ForumID");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("LastActiveTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ForumId")
                        .HasName("PK__Discussi__E210AC4F7B9376C5");

                    b.HasIndex("ModuleId");

                    b.ToTable("DiscussionForum", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.EmotionalFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("EmotionalState")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Emotiona__6A4BEDF6C079427F");

                    b.HasIndex("LearnerId");

                    b.ToTable("EmotionalFeedback", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Evaluate", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentID");

                    b.HasKey("CourseId", "ModuleId", "AssessmentId")
                        .HasName("PK__Evaluate__94A71D07350C7833");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Evaluates");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Expertise", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorID");

                    b.Property<string>("ExpertiseArea")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("InstructorId", "ExpertiseArea")
                        .HasName("PK__Expertis__2B5DADA429D76C0C");

                    b.ToTable("Expertise", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Express", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    b.HasKey("LearnerId", "ActivityId", "FeedbackId")
                        .HasName("PK__Expresse__949EFD6813931B30");

                    b.HasIndex("ActivityId");

                    b.HasIndex("FeedbackId");

                    b.ToTable("Expresses");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.HealthCondition", b =>
                {
                    b.Property<int>("CreationOrder")
                        .HasColumnType("int");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<string>("HealthCondition1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("HealthCondition");

                    b.HasKey("CreationOrder", "LearnerId", "HealthCondition1")
                        .HasName("PK__HealthCo__294ED716EDCAF3F6");

                    b.ToTable("HealthConditions");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorID");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InstructorName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Qualifications")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InstructorId")
                        .HasName("PK__Instruct__9D010B7BDE0D9400");

                    b.HasIndex("UserId");

                    b.ToTable("Instructor", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.InteractionLog", b =>
                {
                    b.Property<int>("LogId")
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    b.Property<string>("ActionType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    b.Property<decimal?>("Duration")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("LogId")
                        .HasName("PK__Interact__5E5499A8BE8A5B86");

                    b.HasIndex("ActivityId");

                    b.HasIndex("LearnerId");

                    b.ToTable("InteractionLog", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Join", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("ForumId")
                        .HasColumnType("int")
                        .HasColumnName("ForumID");

                    b.Property<string>("Post")
                        .HasColumnType("text");

                    b.HasKey("LearnerId", "ForumId")
                        .HasName("PK__Joins__898AF63EBA3E703D");

                    b.HasIndex("ForumId");

                    b.ToTable("Joins");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Leaderboard", b =>
                {
                    b.Property<int>("LeaderboardId")
                        .HasColumnType("int")
                        .HasColumnName("LeaderboardID");

                    b.Property<string>("Season")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TotalPoints")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("LeaderboardId")
                        .HasName("PK__Leaderbo__B358A1E686B80F17");

                    b.ToTable("Leaderboard", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LeaderboardRank", b =>
                {
                    b.Property<int>("LeaderboardId")
                        .HasColumnType("int")
                        .HasColumnName("LeaderboardID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("LeaderboardRank1")
                        .HasColumnType("int")
                        .HasColumnName("LeaderboardRank");

                    b.HasKey("LeaderboardId", "LearnerId")
                        .HasName("PK__Leaderbo__05221E2914A09FB2");

                    b.HasIndex("LearnerId");

                    b.ToTable("LeaderboardRanks");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LeaderboardStudentsCourse", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("LeaderboardId")
                        .HasColumnType("int")
                        .HasColumnName("LeaderboardID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.HasKey("LearnerId", "LeaderboardId")
                        .HasName("PK__Leaderbo__1C9E76E421B43CAB");

                    b.HasIndex("CourseId");

                    b.HasIndex("LeaderboardId");

                    b.ToTable("LeaderboardStudentsCourse", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Learner", b =>
                {
                    b.Property<int>("LearnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LearnerId"));

                    b.Property<int?>("Age")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("age")
                        .HasComputedColumnSql("(datepart(year,getdate())-datepart(year,[birthdate]))", false);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime")
                        .HasColumnName("birthdate");

                    b.Property<string>("CountryOfOrigin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CulturalBackground")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cultural_background");

                    b.Property<string>("EmotionalProfile")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ExperienceLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("last_name");

                    b.Property<string>("MentalHealth")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PersonalityTraits")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhysicalHealth")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LearnerId")
                        .HasName("PK__Learner__67ABFCFA1EEFDCD8");

                    b.HasIndex("UserId");

                    b.ToTable("Learner", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearnerSkill", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<string>("Skill")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("skill");

                    b.HasKey("LearnerId", "Skill")
                        .HasName("PK__LearnerS__C45BDEA5E48E410D");

                    b.ToTable("LearnerSkills");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningActivity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActivityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("MaxPoints")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.HasKey("ActivityId")
                        .HasName("PK__Learning__45F4A7F148FC20D3");

                    b.HasIndex("ModuleId");

                    b.ToTable("LearningActivity", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningGoal", b =>
                {
                    b.Property<int>("GoalId")
                        .HasColumnType("int")
                        .HasColumnName("GoalID");

                    b.Property<string>("GoalDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<string>("ObjectiveType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ProgressStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("TimeBound")
                        .HasColumnType("datetime");

                    b.HasKey("GoalId")
                        .HasName("PK__Learning__8A4FFF311BEAC4EC");

                    b.HasIndex("LearnerId");

                    b.ToTable("LearningGoal", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningPath", b =>
                {
                    b.Property<int>("PathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PathID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PathId"));

                    b.Property<string>("AdaptiveRules")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("CompletionStatus")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("CreationOrder")
                        .HasColumnType("int");

                    b.Property<int>("GoalId")
                        .HasColumnType("int")
                        .HasColumnName("GoalID");

                    b.Property<string>("LearningPathDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("PathId")
                        .HasName("PK__Learning__CD67DC39D4416DA8");

                    b.HasIndex("GoalId");

                    b.ToTable("LearningPath", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningPreference", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<string>("Preference")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("preference");

                    b.HasKey("LearnerId", "Preference")
                        .HasName("PK__Learning__6032E158494B9BDA");

                    b.ToTable("LearningPreferences");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"));

                    b.Property<string>("ContentType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContentUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ContentURL");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("ModuleDifficulty")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ModuleId")
                        .HasName("PK__Modules__2B7477876BE6F7D6");

                    b.HasIndex("CourseId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("MessageBody")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("ReadStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UrgencyLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E321C986044");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.PersonalizationProfile", b =>
                {
                    b.Property<int>("CreationOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreationOrder"));

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<string>("AccessibilityPreferences")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EmotionalState")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    b.Property<int?>("PathId")
                        .HasColumnType("int")
                        .HasColumnName("PathID");

                    b.Property<string>("PersonalityType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PreferredContentTypes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("CreationOrder", "LearnerId")
                        .HasName("PK__Personal__9984E276E73EC0E0");

                    b.HasIndex("LearnerId");

                    b.HasIndex("NotificationId");

                    b.HasIndex("PathId");

                    b.ToTable("PersonalizationProfile", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Quest", b =>
                {
                    b.Property<int>("QuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestId"));

                    b.Property<string>("Criteria")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DifficultyLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("QuestDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("QuestType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("QuestId")
                        .HasName("PK__Quests__B6619ACB885D6696");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.QuestReward", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("QuestID");

                    b.Property<string>("Rewards")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("QuestId", "Rewards")
                        .HasName("PK__QuestRew__D749EC5578916AF7");

                    b.ToTable("QuestReward", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Reward", b =>
                {
                    b.Property<int>("RewardId")
                        .HasColumnType("int")
                        .HasColumnName("RewardID");

                    b.Property<string>("RewardDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RewardType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("RewardValue")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("RewardId")
                        .HasName("PK__Reward__82501599E3A34849");

                    b.ToTable("Reward", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.SkillMasteryQuest", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("QuestID");

                    b.Property<string>("Skills")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("QuestId")
                        .HasName("PK__Skill_Ma__B6619ACBBB199C12");

                    b.ToTable("Skill_Mastery_Quests", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.SkillProgression", b =>
                {
                    b.Property<int>("ProgressId")
                        .HasColumnType("int")
                        .HasColumnName("ProgressID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<string>("ProficiencyLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SpecificSkill")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Specific_Skill");

                    b.HasKey("ProgressId")
                        .HasName("PK__SkillPro__BAE29C85DEE3B5F7");

                    b.HasIndex("LearnerId");

                    b.ToTable("SkillProgression", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Survey", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("SurveyID");

                    b.Property<DateTime?>("ResponseTimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("SurveyId")
                        .HasName("PK__Survey__A5481F9DA746892B");

                    b.ToTable("Survey", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.SurveyQuestion", b =>
                {
                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("SurveyID");

                    b.Property<string>("Question")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("SurveyId", "Question")
                        .HasName("PK__SurveyQu__23FB983B6909533D");

                    b.ToTable("SurveyQuestions");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.TakenAssessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int?>("ScoredPoints")
                        .HasColumnType("int");

                    b.HasKey("AssessmentId", "LearnerId")
                        .HasName("PK__TakenAss__8B5147F11953F770");

                    b.HasIndex("LearnerId");

                    b.ToTable("TakenAssessment", (string)null);
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.TargetTrait", b =>
                {
                    b.Property<int>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.Property<string>("Trait")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ModuleId", "Trait")
                        .HasName("PK__TargetTr__B51B9AB7C8818EC9");

                    b.ToTable("TargetTraits");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Grant", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("QuestID");

                    b.Property<int>("RewardId")
                        .HasColumnType("int")
                        .HasColumnName("RewardID");

                    b.HasKey("QuestId", "RewardId")
                        .HasName("PK__Grants__3E449B92A94CEF25");

                    b.HasIndex("RewardId");

                    b.ToTable("Grants", (string)null);
                });

            modelBuilder.Entity("LearnersSurvey", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("SurveyID");

                    b.HasKey("LearnerId", "SurveyId")
                        .HasName("PK__Learners__ADFF7D039B217D05");

                    b.HasIndex("SurveyId");

                    b.ToTable("LearnersSurvey", (string)null);
                });

            modelBuilder.Entity("Partake", b =>
                {
                    b.Property<int>("QuestId")
                        .HasColumnType("int")
                        .HasColumnName("QuestID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.HasKey("QuestId", "LearnerId")
                        .HasName("PK__Partake__001B2504CA672BC5");

                    b.HasIndex("LearnerId");

                    b.ToTable("Partake", (string)null);
                });

            modelBuilder.Entity("Receife", b =>
                {
                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    b.HasKey("LearnerId", "NotificationId")
                        .HasName("PK__Receives__55A70E193D54808C");

                    b.HasIndex("NotificationId");

                    b.ToTable("Receives", (string)null);
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.Property<int>("FeedbackId")
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorID");

                    b.HasKey("FeedbackId", "InstructorId")
                        .HasName("PK__Review__C39BFD41DB9A3D21");

                    b.HasIndex("InstructorId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("Take", b =>
                {
                    b.Property<int>("BadgeId")
                        .HasColumnType("int")
                        .HasColumnName("BadgeID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.HasKey("BadgeId", "LearnerId")
                        .HasName("PK__Takes__AF629CB3EB07A3C2");

                    b.HasIndex("LearnerId");

                    b.ToTable("Takes", (string)null);
                });

            modelBuilder.Entity("Teach", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.HasKey("InstructorId", "CourseId")
                        .HasName("PK__Teach__F193DC63B5052AB2");

                    b.HasIndex("CourseId");

                    b.ToTable("Teach", (string)null);
                });

            modelBuilder.Entity("Tied", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID");

                    b.Property<int>("LearnerId")
                        .HasColumnType("int")
                        .HasColumnName("LearnerID");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("SurveyID");

                    b.HasKey("EnrollmentId", "LearnerId", "CourseId", "SurveyId")
                        .HasName("PK__Tied__B611B1C446A51BE7");

                    b.HasIndex("SurveyId");

                    b.ToTable("Tied", (string)null);
                });

            modelBuilder.Entity("Adapt", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__Adapt__Instructo__3B40CD36");

                    b.HasOne("Edu_DB_ASP.Models.LearningPath", null)
                        .WithMany()
                        .HasForeignKey("PathId")
                        .IsRequired()
                        .HasConstraintName("FK__Adapt__PathID__3A4CA8FD");
                });

            modelBuilder.Entity("Award", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Achievement", null)
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .IsRequired()
                        .HasConstraintName("FK__Awards__Achievem__2B0A656D");

                    b.HasOne("Edu_DB_ASP.Models.Badge", null)
                        .WithMany()
                        .HasForeignKey("BadgeId")
                        .IsRequired()
                        .HasConstraintName("FK__Awards__BadgeID__2BFE89A6");
                });

            modelBuilder.Entity("Earn", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Achievement", null)
                        .WithMany()
                        .HasForeignKey("AchievementId")
                        .IsRequired()
                        .HasConstraintName("FK__Earns__Achieveme__2739D489");

                    b.HasOne("Edu_DB_ASP.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Earns__LearnerID__282DF8C2");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Achievement", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Badge", "Badge")
                        .WithMany("Achievements")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Achieveme__Badge__628FA481");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("Achievements")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Achieveme__Learn__619B8048");

                    b.Navigation("Badge");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.ActivityInstruction", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.LearningActivity", "Activity")
                        .WithMany("ActivityInstructions")
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityI__Activ__59063A47");

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Assessment", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Module", "Module")
                        .WithMany("Assessments")
                        .HasForeignKey("ModuleId")
                        .IsRequired()
                        .HasConstraintName("FK__Assessmen__Modul__07C12930");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.CollaborativeQuest", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Quest", "Quest")
                        .WithOne("CollaborativeQuest")
                        .HasForeignKey("Edu_DB_ASP.Models.CollaborativeQuest", "QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Collabora__Quest__7D439ABD");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.ContentLibrary", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Course", "Course")
                        .WithMany("ContentLibraries")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ContentLi__Cours__1332DBDC");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.CourseEnrollment", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Course", "Course")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__Cours__5CD6CB2B");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__CourseEnr__Learn__5BE2A6F2");

                    b.Navigation("Course");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.DiscussionForum", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Module", "Module")
                        .WithMany("DiscussionForums")
                        .HasForeignKey("ModuleId")
                        .IsRequired()
                        .HasConstraintName("FK__Discussio__Modul__17036CC0");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.EmotionalFeedback", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("EmotionalFeedbacks")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Emotional__Learn__75A278F5");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Evaluate", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Assessment", "Assessment")
                        .WithMany("Evaluates")
                        .HasForeignKey("AssessmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Evaluates__Asses__503BEA1C");

                    b.HasOne("Edu_DB_ASP.Models.Course", "Course")
                        .WithMany("Evaluates")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Evaluates__Cours__4E53A1AA");

                    b.HasOne("Edu_DB_ASP.Models.Module", "Module")
                        .WithMany("Evaluates")
                        .HasForeignKey("ModuleId")
                        .IsRequired()
                        .HasConstraintName("FK__Evaluates__Modul__4F47C5E3");

                    b.Navigation("Assessment");

                    b.Navigation("Course");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Expertise", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Instructor", "Instructor")
                        .WithMany("Expertises")
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__Expertise__Instr__10566F31");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Express", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.LearningActivity", "Activity")
                        .WithMany("Expresses")
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK__Expresses__Activ__42E1EEFE");

                    b.HasOne("Edu_DB_ASP.Models.EmotionalFeedback", "Feedback")
                        .WithMany("Expresses")
                        .HasForeignKey("FeedbackId")
                        .IsRequired()
                        .HasConstraintName("FK__Expresses__Feedb__43D61337");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("Expresses")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Expresses__Learn__41EDCAC5");

                    b.Navigation("Activity");

                    b.Navigation("Feedback");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.HealthCondition", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.PersonalizationProfile", "PersonalizationProfile")
                        .WithMany("HealthConditions")
                        .HasForeignKey("CreationOrder", "LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__HealthConditions__4D94879B");

                    b.Navigation("PersonalizationProfile");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Instructor", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.InteractionLog", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.LearningActivity", "Activity")
                        .WithMany("InteractionLogs")
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK__Interacti__Activ__70DDC3D8");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("InteractionLogs")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Interacti__Learn__71D1E811");

                    b.Navigation("Activity");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Join", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.DiscussionForum", "Forum")
                        .WithMany("Joins")
                        .HasForeignKey("ForumId")
                        .IsRequired()
                        .HasConstraintName("FK__Joins__ForumID__1AD3FDA4");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("Joins")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Joins__LearnerID__19DFD96B");

                    b.Navigation("Forum");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LeaderboardRank", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Leaderboard", "Leaderboard")
                        .WithMany("LeaderboardRanks")
                        .HasForeignKey("LeaderboardId")
                        .IsRequired()
                        .HasConstraintName("FK__Leaderboa__Leade__6754599E");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("LeaderboardRanks")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Leaderboa__Learn__68487DD7");

                    b.Navigation("Leaderboard");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LeaderboardStudentsCourse", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Course", "Course")
                        .WithMany("LeaderboardStudentsCourses")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Leaderboa__Cours__6B24EA82");

                    b.HasOne("Edu_DB_ASP.Models.Leaderboard", "Leaderboard")
                        .WithMany("LeaderboardStudentsCourses")
                        .HasForeignKey("LeaderboardId")
                        .IsRequired()
                        .HasConstraintName("FK__Leaderboa__Leade__6D0D32F4");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("LeaderboardStudentsCourses")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Leaderboa__Learn__6C190EBB");

                    b.Navigation("Course");

                    b.Navigation("Leaderboard");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Learner", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearnerSkill", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("LearnerSkills")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__LearnerSk__Learn__3A81B327");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningActivity", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Module", "Module")
                        .WithMany("LearningActivities")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LearningA__Modul__5629CD9C");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningGoal", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("LearningGoals")
                        .HasForeignKey("LearnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__LearningG__Learn__4316F928");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningPath", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.LearningGoal", "Goal")
                        .WithMany("LearningPaths")
                        .HasForeignKey("GoalId")
                        .IsRequired()
                        .HasConstraintName("FK__LearningP__GoalI__45F365D3");

                    b.Navigation("Goal");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningPreference", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("LearningPreferences")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__LearningP__Learn__3D5E1FD2");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Module", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Modules__CourseI__5070F446");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.PersonalizationProfile", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("PersonalizationProfiles")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Personali__Learn__48CFD27E");

                    b.HasOne("Edu_DB_ASP.Models.Notification", "Notification")
                        .WithMany("PersonalizationProfiles")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("FK__Personali__Notif__49C3F6B7");

                    b.HasOne("Edu_DB_ASP.Models.LearningPath", "Path")
                        .WithMany("PersonalizationProfiles")
                        .HasForeignKey("PathId")
                        .HasConstraintName("FK__Personali__PathI__4AB81AF0");

                    b.Navigation("Learner");

                    b.Navigation("Notification");

                    b.Navigation("Path");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.QuestReward", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Quest", "Quest")
                        .WithMany("QuestRewards")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__QuestRewa__Quest__00200768");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.SkillMasteryQuest", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Quest", "Quest")
                        .WithOne("SkillMasteryQuest")
                        .HasForeignKey("Edu_DB_ASP.Models.SkillMasteryQuest", "QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Skill_Mas__Quest__7A672E12");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.SkillProgression", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("SkillProgressions")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__SkillProg__Learn__04E4BC85");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.SurveyQuestion", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Survey", "Survey")
                        .WithMany("SurveyQuestions")
                        .HasForeignKey("SurveyId")
                        .IsRequired()
                        .HasConstraintName("FK__SurveyQue__Surve__208CD6FA");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.TakenAssessment", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Assessment", "Assessment")
                        .WithMany("TakenAssessments")
                        .HasForeignKey("AssessmentId")
                        .IsRequired()
                        .HasConstraintName("FK__TakenAsse__Asses__0A9D95DB");

                    b.HasOne("Edu_DB_ASP.Models.Learner", "Learner")
                        .WithMany("TakenAssessments")
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__TakenAsse__Learn__0B91BA14");

                    b.Navigation("Assessment");

                    b.Navigation("Learner");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.TargetTrait", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Module", "Module")
                        .WithMany("TargetTraits")
                        .HasForeignKey("ModuleId")
                        .IsRequired()
                        .HasConstraintName("FK__TargetTra__Modul__534D60F1");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Grant", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Quest", null)
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .IsRequired()
                        .HasConstraintName("FK__Grants__QuestID__2EDAF651");

                    b.HasOne("Edu_DB_ASP.Models.Reward", null)
                        .WithMany()
                        .HasForeignKey("RewardId")
                        .IsRequired()
                        .HasConstraintName("FK__Grants__RewardID__2FCF1A8A");
                });

            modelBuilder.Entity("LearnersSurvey", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__LearnersS__Learn__236943A5");

                    b.HasOne("Edu_DB_ASP.Models.Survey", null)
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .IsRequired()
                        .HasConstraintName("FK__LearnersS__Surve__245D67DE");
                });

            modelBuilder.Entity("Partake", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Partake__Learner__339FAB6E");

                    b.HasOne("Edu_DB_ASP.Models.Quest", null)
                        .WithMany()
                        .HasForeignKey("QuestId")
                        .IsRequired()
                        .HasConstraintName("FK__Partake__QuestID__32AB8735");
                });

            modelBuilder.Entity("Receife", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Receives__Learne__4A8310C6");

                    b.HasOne("Edu_DB_ASP.Models.Notification", null)
                        .WithMany()
                        .HasForeignKey("NotificationId")
                        .IsRequired()
                        .HasConstraintName("FK__Receives__Notifi__4B7734FF");
                });

            modelBuilder.Entity("Review", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.EmotionalFeedback", null)
                        .WithMany()
                        .HasForeignKey("FeedbackId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Feedback__46B27FE2");

                    b.HasOne("Edu_DB_ASP.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__Review__Instruct__47A6A41B");
                });

            modelBuilder.Entity("Take", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Badge", null)
                        .WithMany()
                        .HasForeignKey("BadgeId")
                        .IsRequired()
                        .HasConstraintName("FK__Takes__BadgeID__367C1819");

                    b.HasOne("Edu_DB_ASP.Models.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Takes__LearnerID__37703C52");
                });

            modelBuilder.Entity("Teach", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Teach__CourseID__540C7B00");

                    b.HasOne("Edu_DB_ASP.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__Teach__Instructo__531856C7");
                });

            modelBuilder.Entity("Tied", b =>
                {
                    b.HasOne("Edu_DB_ASP.Models.Survey", null)
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .IsRequired()
                        .HasConstraintName("FK__Tied__SurveyID__3F115E1A");

                    b.HasOne("Edu_DB_ASP.Models.CourseEnrollment", null)
                        .WithMany()
                        .HasForeignKey("EnrollmentId", "LearnerId", "CourseId")
                        .IsRequired()
                        .HasConstraintName("FK__Tied__3E1D39E1");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Assessment", b =>
                {
                    b.Navigation("Evaluates");

                    b.Navigation("TakenAssessments");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Badge", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Course", b =>
                {
                    b.Navigation("ContentLibraries");

                    b.Navigation("CourseEnrollments");

                    b.Navigation("Evaluates");

                    b.Navigation("LeaderboardStudentsCourses");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.DiscussionForum", b =>
                {
                    b.Navigation("Joins");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.EmotionalFeedback", b =>
                {
                    b.Navigation("Expresses");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Instructor", b =>
                {
                    b.Navigation("Expertises");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Leaderboard", b =>
                {
                    b.Navigation("LeaderboardRanks");

                    b.Navigation("LeaderboardStudentsCourses");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Learner", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("CourseEnrollments");

                    b.Navigation("EmotionalFeedbacks");

                    b.Navigation("Expresses");

                    b.Navigation("InteractionLogs");

                    b.Navigation("Joins");

                    b.Navigation("LeaderboardRanks");

                    b.Navigation("LeaderboardStudentsCourses");

                    b.Navigation("LearnerSkills");

                    b.Navigation("LearningGoals");

                    b.Navigation("LearningPreferences");

                    b.Navigation("PersonalizationProfiles");

                    b.Navigation("SkillProgressions");

                    b.Navigation("TakenAssessments");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningActivity", b =>
                {
                    b.Navigation("ActivityInstructions");

                    b.Navigation("Expresses");

                    b.Navigation("InteractionLogs");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningGoal", b =>
                {
                    b.Navigation("LearningPaths");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.LearningPath", b =>
                {
                    b.Navigation("PersonalizationProfiles");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Module", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("DiscussionForums");

                    b.Navigation("Evaluates");

                    b.Navigation("LearningActivities");

                    b.Navigation("TargetTraits");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Notification", b =>
                {
                    b.Navigation("PersonalizationProfiles");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.PersonalizationProfile", b =>
                {
                    b.Navigation("HealthConditions");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Quest", b =>
                {
                    b.Navigation("CollaborativeQuest");

                    b.Navigation("QuestRewards");

                    b.Navigation("SkillMasteryQuest");
                });

            modelBuilder.Entity("Edu_DB_ASP.Models.Survey", b =>
                {
                    b.Navigation("SurveyQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
