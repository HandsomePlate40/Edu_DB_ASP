@model LearnerProfileViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Profile</title>
    <style>
        body {
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #11111B; /* base */
            color: #D9E0EE; /* text */
        }

        .profile-container {
            display: flex;
            align-items: center;
            padding: 2rem;
            background: #181825; /* mantle */
            border-bottom: 1px solid #313244; /* surface0 */
            position: relative;
            border-radius: 15px;
            margin: 2rem;
        }

        .profile-pic-form {
            position: relative;
            width: 100px;
            height: 100px;
            margin-right: 1.5rem;
            border-radius: 50%;
            overflow: hidden;
        }

        .profile-image {
            position: relative;
            width: 100%;
            height: 100%;
            background: #313244; /* surface0 */
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }

        .profile-image img {
            width: 100%;
            height: auto;
            object-fit: cover;
            border-radius: 50%;
        }

        /* Hidden label appears on hover */
        .profile-upload-label {
            position: absolute;
            inset: 0;
            background: rgba(0,0,0,0.5);
            color: #D9E0EE;
            font-size: 0.9rem;
            font-weight: 500;
            justify-content: center;
            align-items: center;
            text-align: center;
            border-radius: 50%;
            opacity: 0;
            transition: opacity 0.3s;
            cursor: pointer;
            display: flex;
        }

        .profile-image:hover .profile-upload-label {
            opacity: 1;
        }

        .profile-upload-label:hover {
            background: rgba(0,0,0,0.6);
        }

        .profile-upload-label input[type="file"] {
            display: none;
        }

        .profile-info {
            flex: 1;
        }

        .profile-info h1 {
            margin: 0;
            font-size: 1.5rem;
            color: #D9E0EE; /* text */
        }

        .profile-info p {
            margin: 0.5rem 0 0;
            color: #BAC2DE; /* subtext1 */
        }

        .section-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        h2 {
            color: #cba6f7;
            border-bottom: 2px solid #45475a;
            padding-bottom: 0.5rem;
            margin-bottom: 1rem;
        }

        table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            margin-bottom: 2rem;
            border-radius: 15px;
            overflow: hidden;
            border: 1px solid #313244;
        }

        .table-header-row {
            background-color: #313244;
        }

        th {
            text-align: left;
            padding: 0.75rem;
            color: #cba6f7;
            border-bottom: 2px solid #45475a;
        }

        td {
            padding: 0.75rem;
            border-bottom: 1px solid #313244;
        }

        /* Remove the right border from the last th and td in each row */
        th:last-child,
        td:last-child {
            border-right: none;
        }

        tr:hover {
            background-color: #1e1e2e;
        }

        .tag {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.85rem;
            font-weight: 500;
            margin-right: 0.5rem;
        }

        .tag.active {
            background: #A6E3A1; /* green */
            color: #1E1E2E; /* base */
        }

        .tag.archived {
            background: #F8BD96; /* peach */
            color: #1E1E2E; /* base */
        }

        .table-section {
            margin-bottom: 3rem;
        }
        .actions-cell {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
        }

        .actions-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr); /* Creates a 2-column grid */
            gap: 1rem;
            justify-content: center;
            margin: 2rem auto;
            max-width: 600px; /* Adjust as needed */
        }

        .actions-grid a {
            display: flex; /* Use flexbox to center content */
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            text-align: center;
        }

        .back-to-index {
            display: flex;
            justify-content: center;
            margin-top: 2rem;
        }

        .back-to-index button, .btn-primary, .btn-danger {
            background-color: #89b4fa;
            color: #1e1e2e;
            border: none;
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            border-radius: 15px;
            transition: background-color 0.3s ease;
            text-decoration: none;
        }

        .back-to-index button:hover, .btn-primary:hover, .btn-danger:hover {
            background-color: #74c7ec;
        }

        .btn-danger {
            background-color: #F38BA8;
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
        }

        .btn-danger:hover {
            background-color: #dc7791;
        }

        .btn-primary {
            font-size: 1rem;
            padding: 0.5rem 1rem;
        }

        .status-new {
            background-color: #a6e3a1; /* green */
            color: #1e1e2e; /* base/black */
            padding: 0.25rem 0.5rem;
            border-radius: 5px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-in-progress {
            background-color: #fab387; /* yellow */
            color: #1e1e2e; /* base/black */
            padding: 0.25rem 0.5rem;
            border-radius: 5px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .module-manager-button {
            display: inline-block;
            padding: 0.5rem 1rem;
            background-color: #cba6f7;
            color: #11111B;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-weight: bold;
            cursor: pointer;
        }
        /* Dropdown styles */
        .dropdown {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #313244;
            min-width: 200px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            border-radius: 8px;
            left: 50%;
            transform: translateX(-50%);
        }

        .dropdown-content a {
            color: #D9E0EE;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

        .dropdown-content a:hover {
            background-color: #45475a;
        }

        .dropdown:hover .dropdown-content {
            display: block;
        }

    </style>
</head>
<body>
<div class="profile-container">
    <div class="profile-pic-form">
        <div class="profile-image">
            <img src="@(string.IsNullOrEmpty(Model.Learner.ProfilePictureUrl) ? Url.Content("/images/profile-user.png") : Model.Learner.ProfilePictureUrl)" alt="User Profile Picture" id="profileImg" />
            <label class="profile-upload-label">
                Change Profile Picture
                <input type="file" id="profilePicture" name="profilePicture" accept="image/*" onchange="uploadProfilePicture()" />
            </label>
        </div>
    </div>

    <div class="profile-info">
        <h1>@Model.Learner.FirstName @Model.Learner.LastName</h1>
        <p>@Model.Learner.Email</p>
        <p>Welcome back, @Model.Learner.FirstName</p>
    </div>
</div>

<form id="uploadForm" asp-action="UploadProfilePicture" method="post" enctype="multipart/form-data" style="display:none;">
    <input type="file" id="hiddenProfilePicture" name="profilePicture" />
</form>

<div class="section-container">
    <div class="table-section">
        <h2>Learning Path</h2>
        <table>
            <thead>
                <tr class="table-header-row">
                    <th>Path ID</th>
                    <th>Description</th>
                    <th>Completion Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var path in Model.LearningPath)
                {
                    <tr>
                        <td>@path.PathId</td>
                        <td>@path.LearningPathDescription</td>
                        <td>
                            @if (path.CompletionStatus.ToLower() == "new")
                            {
                                <span class="status-new">@path.CompletionStatus.ToUpper()</span>
                            }
                            else if (path.CompletionStatus.ToLower() == "in progress")
                            {
                                <span class="status-in-progress">@path.CompletionStatus.ToUpper()</span>
                            }
                            else
                            {
                                @path.CompletionStatus
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="section-container">
    <div class="table-section">
        <h2>Enrolled Courses</h2>
        <table>
            <thead>
                <tr class="table-header-row">
                    <th>Course Title</th>
                    <th>Description</th>
                    <th>Difficulty Level</th>
                    <th>Credit Points</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model.EnrolledCourses)
                {
                    <tr>
                        <td>@course.Title</td>
                        <td>@course.CourseDescription</td>
                        <td>@course.DifficultyLevel</td>
                        <td>@course.CreditPoints</td>
                        <td class="actions-cell">
                            <a href="@Url.Action("Unenroll", "Course", new { courseId = course.CourseId })" class="btn btn-danger">Unenroll</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="section-container">
    <div class="table-section">
        <h2>Discussion Forums</h2>
        <table>
            <thead>
                <tr class="table-header-row">
                    <th>Forum Title</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forum in Model.AvailableForums)
                {
                    <tr>
                        <td>@forum.Title</td>
                        <td>@forum.Description</td>
                         <td class="actions-cell">
                            <a asp-action="PostMessage" asp-controller="DiscussionForums" asp-route-forumId="@forum.ForumId">
                                <button class="btn-primary">Post</button>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="section-container">
    <div class="table-section">
        <h2>Learning Goals</h2>
        <table>
            <thead>
            <tr class="table-header-row">
                <th>Objective Type</th>
                <th>Progress Status</th>
                <th>Goal Description</th>
                <th>Time Bound</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var goal in Model.LearningGoals)
            {
                <tr>
                    <td>@goal.ObjectiveType</td>
                    <td>@goal.ProgressStatus</td>
                    <td>@goal.GoalDescription</td>
                    <td>@goal.TimeBound?.ToString("yyyy-MM-dd")</td>
                </tr>
            }
            </tbody>
        </table>
        <h2>Your Options</h2>
    </div>
</div>

<div class="actions-grid">
    
    <a asp-action="Index" asp-controller="Learners" class="btn-primary">View your Info</a>
    <a asp-action="JoinCollabQuest" asp-controller="Learners" class="btn-primary">Join a Quest</a>
    <a asp-action="AddGoal" asp-controller="Learners" class="btn-primary">Add a Goal</a>
    <a asp-action="QuestMembers" asp-controller="Learners" class="btn-primary">Show Members in Active Quest</a>
    <a asp-action="LearnerAssessmentView" asp-controller="Assessment" class="btn-primary">Show your Assessments Options</a>
    <a asp-action="RemovedCourses" asp-controller="Course" class="btn-primary">View Previous Courses</a>
    <a asp-action="TrackProgress" asp-controller="Learners" class="btn-primary">Track Progress</a>
    <a asp-action="ShareFeedback" asp-controller="Learners" class="btn-primary">Share Emotional Feedback</a>
    <a asp-action="ViewLearnerIndex" asp-controller="Module" class="btn-primary">
        See Modules
    </a>
    <a asp-action="LearnerAssessmentView" asp-controller="Assessment" class="btn-primary">
        Assessments
    </a>
</div>

<script>
    function uploadProfilePicture() {
        var fileInput = document.getElementById('profilePicture');
        var hiddenFileInput = document.getElementById('hiddenProfilePicture');
        var form = document.getElementById('uploadForm');

        hiddenFileInput.files = fileInput.files;
        form.submit();
    }
</script>
</body>
</html>